{
  "hash": "40858b7768b401a1bd3c379e9db4a128",
  "result": {
    "markdown": "---\ntitle: \"Estimating continuous-time Markov Chains from Incomplete Data: Be mindful of the time\"\nauthor: \"Joseph Rickert\"\ndate: 2025-10-15\ncode-fold: true\ncode-summary: \"Show the code\"\ndescription: \"In a previous post, *A Simple Bayesian Multi-state Survival Model for a Clinical Trial*, I described a textbook example that compared the effectiveness of asthma treatments by fitting a discrete-time Markov model to clinical trial data. In this post, I elaborate on that analysis by fitting a continuous-time Markov chain (CTMC) to the same, discretely observed state-table data. An EM algorithm reconstructs the likelihood function to estimate the generator matrix for the CTMC. I describe some of the differences between discrete-time and continuous-time Markov models and highlight the importance of understanding how the data implicitly sets time scales when modeling real world processes.\"\ncategories: \"\"\nimage: \"states.png\"\neditor: source\n---\n\n\nThe continuous-time Markov model is a 5-state, absorbing Markov chain where patients move through various health states as they undergo treatment for asthma. The states are defined as follows: `STW`= successfully treated week, `UTW`= unsuccessfully treated week, `Hex`= hospital-managed exacerbation ,`Pex`= primary care-managed exacerbation, and `TF`= treatment failure. The state diagram is shown below.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n## It's A Matter of Time\n\nBefore getting into the analysis itself, let's review some of the salient differences between discrete-time and continuous-time Markov models. The choice between the two approaches hinges on how much the available data can tell you about time.\n\nA discrete-time Markov chain (DTMC) models only the most primitive notion of time. The process starts in some state and then at the next time step, the process either stays in the same state or jumps to another state according to a according to a matrix of transition probabilities that do not vary with time. The mathematical model assumes that the time interval between transitions is fixed and equal to one time unit. Hence, using a DTMC to model a real world process requires that the modeler choose a time step interval that is appropriate for the process being modeled. The time interval could be any regular interval that is consistent with the development of the real world process being modeled. For example, when modeling the progression of a disease, the time interval must be on a scale that is appropriate for the biology of disease progression and reflects the with which data are collected. \n\nA DTMC model is fully specified when the transition probability matrix $P$ is given or estimated. Each element $p_{ij}$ of $P$ gives the probability of transitioning from state $i$ to state $j$ in one time step. The transition probability matrix for multiple time steps may be computed by raising the one-step transition matrix to the appropriate power. For example, if the time step interval is one week, then the three-week transition probability matrix is given by $P^3$. So that while time does not generally explicitly enter into the process of estimating the $P$ matrix, the time interval is implicitly defined by the frequency of data collection. Developing a useful DTMC model requires verifying that model predictions compare well with the observed progress of the real world process being modeled. For a disease progression model this would mean comparing state transitions over time to the to actual transitions observed in a cohort of patients.\n\nIn contrast to a DTMC, a continuous-time Markov chain (CTMC) explicitly models the time between transitions as exponentially distributed random variables with rates determined by the generator matrix, $Q$. The elements $q_{ij}$ of $Q$ give the instantaneous rate of transitioning from state $i$ to state $j$. The time spent in state $i$ before transitioning to another state is also exponentially distributed. In a CTMC model the rates are fixed and do not vary with time, but the transition probabilities do vary with time. The time-dependent transition probability matrix $P(t)$ may be computed from $Q$ by solving the Kolomogorov differential equations. (See below.) For any time interval $t$, the probabilities of transitioning from state $i$ to state $j$ may be computed by matrix exponential: $P(t) = e^{Qt}$. \n\nUnlike a DTMC model, a CTMC model explicitly allows for states to change at random intervals determined by transition rates that are unique to each state. So while time interval are random, it may not be apparent that the overall time scale is set by the data used to estimate the $Q$ matrix. We will see how this plays out in the analysis below.\n\nBoth DTCMC and CTMC Markov models are fit by finding modeling parameters maximally consistent with the data. One would expect both models to produce similar results for time within the study period. However, this is not necessarily the case for times beyond the study period. The example below illustrates this kind of breakdown and raises important questions about long term outcomes. Beyond the scope of the data differences in modeling assumptions become important.\n\nAlso note that the Appendix below provides some of the relevant background on CTMCs.\n\n## Preliminaries\n\nThese two sections of code load the required R packages and define a helper function to compute the transition probability matrix for a 5-state CTMC over a sequence of time points.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"R Packages\"}\nlibrary('dplyr')\nlibrary('ggplot2')\nlibrary('stringr')\nlibrary('tidyverse')\nlibrary('matrixcalc')\nlibrary('expm') # for matrix exponentiation\nlibrary('ctmcd') # for continuous-time Markov chain models\nlibrary('diagram')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Helper Functions\"}\n# This function computes the transition probability matrix for a 5-state CTMC. It results in a matrix with one row for each time step and 20 columns for the transitions probabilities for the four transient states.\nTP5 <- function(Q, Time){\n  if (dim(Q)[1]*dim(Q)[2] != 25){stop(\"Matrix 'Q' must be 5 x 5.\")}\nTP <- matrix(0, nrow=length(Time), ncol=20)\nfor (t in 1:length(Time)){\n  P <- expm(Q * Time[t])\n  TP[t,1] <- P[1,1]\n  TP[t,2] <- P[1,2]\n  TP[t,3] <- P[1,3]\n  TP[t,4] <- P[1,4]\n  TP[t,5] <- P[1,5]\n  \n  TP[t,6] <- P[2,1]\n  TP[t,7] <- P[2,2]\n  TP[t,8] <- P[2,3]\n  TP[t,9] <- P[2,4]\n  TP[t,10] <- P[2,5]\n  \n  TP[t,11] <- P[3,1]\n  TP[t,12] <- P[3,2]\n  TP[t,13] <- P[3,3]\n  TP[t,14] <- P[3,4]\n  TP[t,15] <- P[3,5]\n  \n  TP[t,16] <- P[4,1]\n  TP[t,17] <- P[2,2]\n  TP[t,18] <- P[4,3]\n  TP[t,19] <- P[4,4]\n  TP[t,20] <- P[4,5]\n  \n}\n\nreturn(list(TP,Time))\n\n}\n```\n:::\n\n\n## The Data\n\nThe data for the model comes from the clinical trial conducted by Kavuru et al. (2000) comparing multiple treatments for asthma management. As in the previous post, I follow Welton et al. and confine the analysis to comparing the two treatments Seretide and Flucticasone. These data, which are reproduced in in Welton et al., are just state tables that give the aggregate number of state transition observed over the course of 12 weeks. Data of this sort is sometimes described as \"incomplete discrete data\" because it does not provide the complete continuous-time history of each patient. Instead, the data only give the number of patients in each state at the beginning and end of the 12 week period. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Data Code\"}\nstates <- c(\n  \"STW\" = \"sucessfully treated week\",\n  \"UTW\" = \"unsucessfully treated week\",\n  \"Hex\" = \"hospital-managed exacerbation\",\n  \"Pex\" = \"primary care-managed exacerbation\",\n  \"TF\" = \"treatment failure\"\n)\n\ntreatments <- c(\"Seretide\", \"Fluticasone\")\n\ns_state <- matrix(\n  c(\n    210, 60, 0, 1, 1,\n    88, 641, 0, 4, 13,\n    0, 0, 0, 0, 0,\n    1, 0, 0, 0, 1,\n    0, 0, 0, 0, 81\n  ),\n  nrow = 5, byrow = TRUE,\n  dimnames = list(names(states), names(states))\n)\n\nf_state <- matrix(\n  c(\n    66, 32, 0, 0, 2,\n    42, 752, 0, 5, 20,\n    0, 0, 0, 0, 0,\n    0, 4, 0, 1, 0,\n    0, 0, 0, 0, 156\n  ),\n  nrow = 5, byrow = TRUE,\n  dimnames = list(names(states), names(states))\n)\n```\n:::\n\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Seretide Transitions\"}\ns_state\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    STW UTW Hex Pex TF\nSTW 210  60   0   1  1\nUTW  88 641   0   4 13\nHex   0   0   0   0  0\nPex   1   0   0   0  1\nTF    0   0   0   0 81\n```\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Flucticasone Transitions\"}\nf_state\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    STW UTW Hex Pex  TF\nSTW  66  32   0   0   2\nUTW  42 752   0   5  20\nHex   0   0   0   0   0\nPex   0   4   0   1   0\nTF    0   0   0   0 156\n```\n:::\n:::\n\n\n\n:::\n\n\n::::\n\n## The Likelihood Solution\n\nThe model below uses the EM algorithm developed by Bladt and SÃ¸rensen (2005), further described in Inamura (2006), and implemented in the  [`ctmcd`](https://cran.r-project.org/package=ctmcd) R package to calculate the Maximum Likelihood estimator for the generator matrix, $Q$. (See Israel et al. (2001) for its use in credit rating applications.) To understand the method, consider that if complete continuous-time data were available it would be straightforward to compute the Likelihood function for the $Q$ matrix.\n\n\n\n$$L(Q) = \\prod_{i=1}^{I} \\prod_{\\substack{j=1 \\\\ j \\ne i}}^{I} q_{ij}^{N_{ij}(T)} \\exp\\left( -q_{ij} R_i(T) \\right)$$\n\nwhere $N_{ij}(T)$ denotes the number of transitions from $i$ to $j$ within time $T$ and $R_i(T)$ gives the cumulative sojourn times in state $i$ before the process jumps to another state. In this case, a single off-diagonal element of $Q$ would look like:\n\n\n$$\\hat{q}_{ij}^{\\mathrm{ML}} = \\frac{N_{ij}(T)}{R_i(T)}$$\n\nHowever, we don't have complete data. The two data matrices represent data observed only at times 0 and $T$.  Nevertheless, there are several methods for estimating $N_{ij}(T)$, $R_i(T)$, and $Q(T)$ which require developing numerical solutions to the two complicated conditional integral equations reproduced in the appendix below. In this post, use the EM algorithm solution implement in the `gm()` function of Marius Pfeuffer's [`ctmcd` R package](https://cran.r-project.org/package=ctmcd). Note that the `gmEM()`method called by `gm()` requires `gmguess` and initial guess for the $Q$ matrix an `te`, the **time elapsed in the transition process**.\n\n\n\n## Generating Matrix (Q) and Transition Probability Matrix (P)\n\nThis section calculates the Q matrix and some basic properties for the CTMC models of the Seretide and Flucticasone treatments using the EM algorithm described above. Note that in the code below, I set the `te` = 1. Even though the data were collected over a 12 week period, this information in not reflected in the state table. This means that the time scale as discussed above is one unit equals twelve weeks. The practical effect is that to estimate the time-dependent transition transition probabilities for week 1, t should be set to 1/12. \n\nThis code sets up the initial guess for the $Q$ matrix which will be used for both the Seretide and Flucticasone calculations. The initial guess does not appear to be critical, but it must be a valid generator matrix.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Initial Guess for Q Matrix\"}\n# Matrix to seed EM algorithm\ns0 <- matrix(1, 5, 5)\ndiag(s0) <- 0\ndiag(s0) <- -rowSums(s0)\ns0[5,] <- 0\n```\n:::\n\n\nThree sets of matrices are laid out here for each treatment. The first is the transition probability matrix, $P$, reported in Welton et al. (2010) which was derived from the state table data. These transitions are used to demonstrate the face value credibility of the CTMC model. The second pair of matrices are the generator matrices, $Q$, estimated by the EM algorithm. The third set show the estimated transition probability matrices, $P(t)$, computed from the estimated $Q$ matrix by matrix exponentiation for a time interval of one unit (12 weeks).\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\n## Seretide  Matirces\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"P Matrix for Seretide from ESDMHC\"}\nESDMHC_P_s <- matrix(\n  c(\n    0.762, 0.220, 0.004, 0.007, 0.007,\n    0.119, 0.855, 0.001, 0.007, 0.019,\n    0.200, 0.200, 0.200, 0.200, 0.200,\n    0.286, 0.144, 0.144, 0.142, 0.284,\n    0, 0, 0, 0, 1\n  ),\n  nrow = 5, byrow = TRUE,\n  dimnames = list(names(states), names(states))\n)\nround(ESDMHC_P_s,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     STW  UTW  Hex  Pex   TF\nSTW 0.76 0.22 0.00 0.01 0.01\nUTW 0.12 0.86 0.00 0.01 0.02\nHex 0.20 0.20 0.20 0.20 0.20\nPex 0.29 0.14 0.14 0.14 0.28\nTF  0.00 0.00 0.00 0.00 1.00\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Model Estimated Q Matrix\"}\nem_s <- gm(s_state, te=1, method=\"EM\", gmguess=s0)\n\n #t <- 1  # time interval\nQ_s  <-em_s$par\nround(Q_s,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      STW    UTW     Hex   Pex  TF\nSTW -0.28   0.27    0.00  0.01 0.0\nUTW  0.12  -0.18    0.01  0.05 0.0\nHex 61.18 192.80 -260.13  6.15 0.0\nPex  3.81   0.00    0.00 -7.02 3.2\nTF   0.00   0.00    0.00  0.00 0.0\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Model Estimated Q Matrix\"}\n#plot(em_s,col = c(\"white\", \"white\"), cex = 1.5, main=\"Seretide EM estimate for Q\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Model Estimated P matrix\"}\nt <- 1\nP_s <- expm(Q_s * t)\nround(P_s,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     STW  UTW Hex  Pex   TF\nSTW 0.77 0.22   0 0.00 0.00\nUTW 0.12 0.86   0 0.01 0.02\nHex 0.28 0.69   0 0.00 0.02\nPex 0.43 0.11   0 0.00 0.46\nTF  0.00 0.00   0 0.00 1.00\n```\n:::\n:::\n\n\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n## Fluticasone Matrices\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"P Matrix for Flucticasone from ESDMHC\"}\nESDMHC_P_f <- matrix(\n  c( 0.638, 0.314, 0.010, 0.009, 0.029,\n     0.052, 0.914, 0.001, 0.007, 0.026,\n     0.200, 0.200, 0.200, 0.200, 0.200,\n     0.101, 0.500, 0.100, 0.199, 0.100,\n     0, 0, 0, 0, 1\n  ),\n  nrow = 5, byrow = TRUE,\n  dimnames = list(names(states), names(states))\n)\nround(ESDMHC_P_f,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     STW  UTW  Hex  Pex   TF\nSTW 0.64 0.31 0.01 0.01 0.03\nUTW 0.05 0.91 0.00 0.01 0.03\nHex 0.20 0.20 0.20 0.20 0.20\nPex 0.10 0.50 0.10 0.20 0.10\nTF  0.00 0.00 0.00 0.00 1.00\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Model Estimated Q Matrix\"}\nem_f <- gm(f_state, te=1, method=\"EM\", gmguess=s0)\n\n#t <- 1  # time interval\nQ_f  <-em_f$par\nround(Q_f,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      STW    UTW     Hex    Pex   TF\nSTW -0.43   0.41    0.00   0.00 0.02\nUTW  0.07  -0.22    0.01   0.12 0.02\nHex 11.26 198.70 -221.70   9.77 1.97\nPex  0.00  15.20    0.05 -15.25 0.00\nTF   0.00   0.00    0.00   0.00 0.00\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Model Estimated Q Matrix\"}\n#plot(em_f,col = c(\"white\", \"white\"), cex = 1.5, main=\"Flucticasone EM estimate for Q\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Model Estimated P matrix\"}\nt <- 1\nP_f <- expm(Q_f * t)\nround(P_f,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     STW  UTW Hex  Pex   TF\nSTW 0.66 0.32   0 0.00 0.02\nUTW 0.05 0.92   0 0.01 0.02\nHex 0.08 0.88   0 0.01 0.03\nPex 0.05 0.92   0 0.01 0.02\nTF  0.00 0.00   0 0.00 1.00\n```\n:::\n:::\n\n\n\n:::\n\n\n::::\n\nAs it turns out, the continuous-time estimates are very credible. For both Seretide and Flucticasone, the transition probabilities estimated for the first two rows P[1,1] to P[1,5] and P[2,1] to P[2,5] closely match the corresponding transition probabilities reported in Welton et al. (2010). The remaining rows of the $P$ matrix are less important because they represent transitions from states that are rarely occupied.\n\n\n## Transition Probabilities over Time\n\nThis next bit of code plots out the transition probabilities over three time periods for both treatments.  Note that the points on the curves at twelve weeks match the matrices computed above, and the values plotted for the first eleven weeks seem to be plausible estimates. Note that in the code below the matrices `TP_s` and `TP_f` contain all of the transition probabilities and that the code to plot these probabilities is also given. This may be useful for exploring the behavior of the model over time.\n\n### Seretide Probabilities over time\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the Plot Code\"}\nTime <- seq(0,3,by = 1/12)\nTP_Mat_s <- TP5(Q = Q_s, Time = Time)\nprobs_s <- as.data.frame(TP_Mat_s[1])\nWeeks <- 1: length(Time)\nTP_s <- cbind(Weeks, TP_Mat_s[2], probs_s)\nnames(TP_s) <- c(\"Weeks\", \"Time\",\n               \"P[1,1]\", \"P[1,2]\", \"P[1,3]\", \"P[1,4]\", \"P[1,5]\",\n               \"P[2,1]\", \"P[2,2]\", \"P[2,3]\", \"P[2,4]\", \"P[2,5]\",\n               \"P[3,1]\", \"P[3,2]\", \"P[3,3]\", \"P[3,4]\", \"P[3,5]\",\n               \"P[4,1]\", \"P[4,2]\", \"P[4,3]\", \"P[4,4]\", \"P[4,5]\")\n\n# Plot the entire P matrix over time\ndf_long_s <- TP_s %>%\n  pivot_longer(\n    cols = starts_with(\"P[\"), # Selects all columns starting with \"P[\"\n    names_to = \"TP\",    # New column for the original column names\n    values_to = \"Value\"        # New column for the values\n  )\n\nProbs_s <- df_long_s |> ggplot(aes(x = Weeks, y = Value, color = TP)) +\n  geom_line() +\n  facet_wrap(~ TP, scales = \"free_y\") +\n  scale_x_continuous(`breaks` = seq(0, length(Weeks), by = 12)) +\n  labs(title = \"State Transition Probabilities over Time\",\n       x = \"Weeks x 12\", y = \"Transition Probability\")\n#Probs_s\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the Plot Code\"}\n# Plot only the first row of the P Matrix over time\ndf_long_s1 <- TP_s %>%\n  pivot_longer(\n    cols = starts_with(\"P[1\"), # Selects all columns starting with \"P[\"\n    names_to = \"TP\",    # New column for the original column names\n    values_to = \"Value\"        # New column for the values\n  )\n\nProbs_s1 <- df_long_s1 |> ggplot(aes(x = Weeks, y = Value, color = TP)) +\n  geom_line() +\n  facet_wrap(~ TP, scales = \"free_y\") +\n  scale_x_continuous(`breaks` = seq(0, length(Weeks), by = 12)) +\n  labs(title = \"STW Transition Probabilities over Time\",\n       x = \"Weeks x 12\", y = \"Transition Probability\")\nProbs_s1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n### Fluticasone Probabilities over time\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the Plot Code\"}\nTime <- seq(0,3,by = 1/12)\nTP_Mat_f <- TP5(Q = Q_f, Time = Time)\nprobs_f <- as.data.frame(TP_Mat_f[1])\nWeeks <- 1: length(Time)\nTP_f <- cbind(Weeks, TP_Mat_f[2], probs_f)\n\nnames(TP_f) <- c(\"Weeks\", \"Time\",\n               \"P[1,1]\", \"P[1,2]\", \"P[1,3]\", \"P[1,4]\", \"P[1,5]\",\n               \"P[2,1]\", \"P[2,2]\", \"P[2,3]\", \"P[2,4]\", \"P[2,5]\",\n               \"P[3,1]\", \"P[3,2]\", \"P[3,3]\", \"P[3,4]\", \"P[3,5]\",\n               \"P[4,1]\", \"P[4,2]\", \"P[4,3]\", \"P[4,4]\", \"P[4,5]\")\n\n# Plot the entire P Matrix over time\n\ndf_long_f <- TP_f %>%\n  pivot_longer(\n    cols = starts_with(\"P[\"), # Selects all columns starting with \"P[\"\n    names_to = \"TP\",    # New column for the original column names\n    values_to = \"Value\"        # New column for the values\n  )\n\nProbs_f <- df_long_f |> ggplot(aes(x = Weeks, y = Value, color = TP)) +\n  geom_line() +\n  facet_wrap(~ TP, scales = \"free_y\") +\n  scale_x_continuous(`breaks` = seq(0, length(Weeks), by = 12)) +\n  labs(title = \"State Transition Probabilities over Time\",\n       x = \"Weeks x 12\", y = \"Transition Probability\")\n#Probs_f\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the Plot Code\"}\n#Plot only the first row of the P Matrix over time\ndf_long_f1 <- TP_f %>%\n  pivot_longer(\n    cols = starts_with(\"P[1\"), # Selects all columns starting with \"P[\"\n    names_to = \"TP\",    # New column for the original column names\n    values_to = \"Value\"        # New column for the values\n  )\n\nProbs_f1 <- df_long_f1 |> ggplot(aes(x = Weeks, y = Value, color = TP)) +\n  geom_line() +\n   facet_wrap(~ TP, scales = \"free_y\") +\n  scale_x_continuous(`breaks` = seq(0, length(Weeks), by = 12)) +\n  labs(title = \"STW Transition Probabilities over Time\",\n       x = \"Weeks x 12\", y = \"Transition Probability\")\nProbs_f1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n\n## Some Estimates Based on CTMC Theory.\n\nThis next section presents some additional estimates based on the theory of continuous-time Markov chains. These estimates include the mean sojourn times in each state and the mean time to absorption. Note that all of these time estimates are in the units of weeks x 12 defined by the data. \n\n### Fundamental Matrix for Absorbing Continuous Time Markov Chains\n\n\n\nLet V be the sub matrix of the generator matrix, Q, comprising the transient states. Then the matrix $F = -V^{-1}$ is called the fundamental matrix. For all transient states $i$ and $j$, $F_{ij}$ is the time that a process started in state $i$ spends in state $j$. Then for each state i, $T_a = \\sum_{j}F_{ij}$ is the mean time to absorption.\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Fundamental Matrix\"}\nV_s <- Q_s[1:4,1:4]\nF_s <- -1* solve(V_s)\nround(F_s,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      STW   UTW  Hex  Pex\nSTW 26.55 42.57 0.00 0.31\nUTW 23.25 43.13 0.00 0.31\nHex 23.82 42.53 0.01 0.31\nPex 14.44 23.16 0.00 0.31\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Mean Sojourn Times\"}\nEs <- 1 / (rowSums(Q_s) - diag(Q_s))\n#Es <- 12* Es # convert to weeks\nround(Es,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n STW  UTW  Hex  Pex   TF \n3.54 5.68 0.00 0.14  Inf \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Time to Absorption\"}\nTa_s <- rowSums(F_s)\n\nround(Ta_s,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  STW   UTW   Hex   Pex \n69.43 66.69 66.66 37.91 \n```\n:::\n:::\n\n\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Fundamental Matrix\"}\nV_f <- Q_f[1:4,1:4]\nF_f <- -1* solve(V_f)\nround(F_f,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     STW   UTW  Hex  Pex\nSTW 7.58 34.29 0.00 0.26\nUTW 5.50 35.89 0.00 0.27\nHex 5.56 35.49 0.01 0.27\nPex 5.50 35.89 0.00 0.34\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Mean Sojourn Times\"}\nEf <- 1 / (rowSums(Q_f) - diag(Q_f))\n#Ef <- 12* Ef # convert to weeks\nround(Ef,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n STW  UTW  Hex  Pex   TF \n2.32 4.64 0.00 0.07  Inf \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Time to Absorption\"}\nTa_f <- rowSums(F_f)\nround(Ta_f,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  STW   UTW   Hex   Pex \n42.13 41.67 41.33 41.73 \n```\n:::\n:::\n\n:::\n\n\n::::\n\n\n### Survival\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the Plot Code\"}\n# Generator matrix for Seretide: Q_s: see above\n# Generator matrix for Flucticasone: Q_f: See above\n# Initial state: all patients start in Health\np0 <- c(1, 0, 0, 0, 0)\n\n# Time points\ntime_points <- seq(0,100,by = 1)\n\n# Survival probabilities for each cohort\nsurvival_s <- sapply(time_points, function(t) {\n  P_t <- expm(Q_s * t)\n  p_t <- p0 %*% P_t\n  return(p_t[1] + p_t[2] + p_t[3] + p_t[4])  # Still in Health or Disease\n})\n\nsurvival_f <- sapply(time_points, function(t) {\n  P_t <- expm(Q_f * t)\n  p_t <- p0 %*% P_t\n  return(p_t[1] + p_t[2] + p_t[3] + p_t[4])  # Still in Health or Disease\n})\n\n# Combine into one data frame\ndf <- data.frame(\n  time = rep(time_points, 2),\n  survival = c(survival_s, survival_f),\n  cohort = rep(c(\"Seretide\", \"Flucticasone\"), each = length(time_points))\n)\n\n# Plot survival curves\nggplot(df, aes(x = time, y = survival, color = cohort)) +\n  geom_line(size = 1.2) +\n  labs(title = \"Survival Curves for Two Treatment Cohorts\",\n       x = \"Weeks x 12\",\n       y = \"Survival Probability\",\n       color = \"Cohort\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n### Conclusions\n\nThe estimated sojourn times seem reasonable, but the long range estimates are to be contemplated with a good deal of skepticism. A literature search did not produce any evidence that asthma would progress as modeled over extended time periods, and it is doubtful that the treatment regimens would remain unmodified over long periods of time. It is also noteworthy that Welton et al. did not offer any long range projections based on their discrete-time model. Nevertheless, the long term estimations presented are representative of the kinds of results that can be obtained by modeling in continuous-time. \n\nThe survival curves in the plot above initially appear to be consistent with those produced in the DTMC post referenced above. However, looking beyond the shape of the curves, one sees that **the time scales differ by an order of magnitude**. Both of these models proceed from reasonable assumptions, and share many similar structural elements, but they lead to significantly different conclusions. As explained above, transition probabilities for DTMC do not vary over time. So having obtained these probabilities, the internal evidence of the model would suggest that disease progression is over weeks. Nevertheless, the CTMC model which replicates the estimated probabilities of the DTMCM shows progression over a time scale that dramatically different. This inconsistency urgently points out the need for expert opinion and external validation to assess the assumptions about time. Even without a change in the underlying dynamics of a system, a model may only be useful over a time scale that needs to be determined from external evidence.\n\nBe careful with the time!\n\n## Appendix: Continuous-Time Markov Chains\n\nAs in the previous post, the progress of patients passing through various states of health as they undergo for asthma is modeled by the following 5-state Markov chain. In the present analysis, I fit the model to a continuous-time Markov Chain (CTMC) so a little background on continuous-time Markov chains is in order. A Continuous-Time Markov Chain (CTMC) is a stochastic process $X(t), t \\ge 0$ over a finite or countable state space, $S$, such that the process satisfies the Markov property: the future state depends only on the current state, not on the past history. \n$$P(X(t + s) =j | X(s) = i, history) = P(X(t + s) =j | X(s) = i)$$\nHence, just like a discrete-time Markov chain, a CTMC is *memoryless*. However, unlike a discrete-time Markov chain where the behavior of the process is determined by a matrix of transition probabilities, the dynamics of a CTMC are determined by its generator matrix $Q$ which has the following following properties:\n\n* For ${i \\neq j}$, the off-diagonal entries $q_{ij} \\geq 0$ represent the instantaneous transition rate from state $i$ to state $j$.\n\n* The diagonal entries are defined such that each row sums to zero: $q_{ii} = -\\sum_{j \\neq i} q_{ij}$\n\n* The time-dependent probability matrix for a CTMC may be derived from either the Kolmogorov forward equation: $\\frac{d}{dt} P(t) = P(t) Q$ or the Kolmogorov backward equation is: $\\frac{d}{dt} P(t) = Q P(t)$\n\n* The memoryless property dictates that the amount of time the process stays in a state $i$ before transitioning to another state $j \\ne i$ is governed by an exponential distribution with rate: $q_{i}=\\sum _{j\\ne i}q_{ij}$. Hence sojourn time in state $i$ is given by the exponential distribution: $P(T_{i}>t)=e^{-q_{i}t}$ with mean sojourn time: \n$$E[T_{i}]=\\frac{1}{q_{i}}=\\frac{1}{\\sum_{j\\ne i}q_{ij}}$$\n\n\n\n\n## Conditional Equations\n\nThe integral equations required to estimate the likelihood function for the $Q$ matrix from incomplete data are: \n$$E(R_i(T) \\mid Q, s(0), s(T)) = \\frac{n_{i,0}s(T)\\,\\mathbf{u}_{s(0)}^T \n\\left( \\int_0^T e^{Qt} \\,\\mathbf{u}_i \\mathbf{u}_i^T\\, e^{Q(T - t)} \\,dt \\right) \n\\mathbf{u}_{s(T)}}{\\mathbf{u}_{s(0)}^T\\, e^{QT}\\, \\mathbf{u}_{s(T)}}$$\n\nand\n\n\n$$E(N_{ij}(T) \\mid Q, s(0), s(T)) = \n\\frac{n_{i,0}s(T)\\,\\eta_{ij}\\,\\mathbf{u}_{s(0)}^T \n\\left( \\int_0^T e^{Qt} \\,\\mathbf{u}_i \\mathbf{u}_i^T\\, e^{Q(T - t)} \\,dt \\right) \n\\mathbf{u}_{s(T)}}{\\mathbf{u}_{s(0)}^T\\, e^{QT}\\, \\mathbf{u}_{s(T)}}$$\n\nwhere \n\n* $n$ refers to an element of the discrete-time absolute transition frequency matrix $N(T)$ which constitutes the data * * $uk$ denotes a unit vector with a 1 at position $k$.\n* $l$ indicates the current iteration step of the EM algorithm.\n\nSee Pfeuffer (2017), Inamura (2006), and Bladt and SÃ¸rensen (2000) (2005) for more details.\n\nThe computation of the integrals is carried out following the matrix exponential approach described\nin van Loan (1978) and . In order to perform an estimate based on the EM algorithm\n In the\nfollowing example, this will be the matrix gm0, which is an arbitrarily chosen generator matrix where\nall off diagonal entries are 1 and state 8 is determined as an absorbing state.\n\n\nvia the wizardry of who laid out the computation to solve two complicated conditional integral equations via the EM algorithm. (See the [ctmcd package vignette](https://cran.r-project.org/web/packages/ctmcd/vignettes/RJ-2017-038.pdf) for a first look at the equations.)\n\n\n## Refernces\n\n* Bladt, M  and M. SÃ¸rensen. [Statistical inference for discretely observed Markov jump processes](https://doi.org/10.1111/j.1467-\n9868.2005.00508.x) Journal of the Royal Statistical (2005). Look [here](https://www.maphysto.dk/publications2/MPS-RR/2003/21.pdf) for the pdf.\n\n* Inamura, Yasunari. [Estimating Continuous Time Transition Matrices From Discretely Observed Data](https://www.boj.or.jp/en/research/wps_rev/wps_2006/data/wp06e07.pdf), Bank of\nJapan Working Paper Series (2006). \n\n* Israel, R.B. et al. [Finding generators for Markov chains via empirical transition matrices, with applications to credit ratings](https://onlinelibrary.wiley.com/doi/10.1111/1467-9965.00114). Mathematical Finance (2001) \n\n* Kavuru M, Melamed J, Gross G, Laforce C, House K, Prillaman B, Baitinger L, Woodring A, and Shah T. [Salmeterol and fluticasone propionate combined in a new powder inhalation device for the treatment of asthma: a randomized, double-blind, placebo-controlled trial](https://pubmed.ncbi.nlm.nih.gov/10856143/). (2000) \n\n* Pfeuffer, Marius. [ctmcd: An R Package for Estimating the Parameters of a Continuous-Time Markov Chain from Discrete-Time Data](https://cran.r-project.org/web/packages/ctmcd/vignettes/RJ-2017-038.pdf), The R Journal Vol. 9/2, December (2017)\n\n* Rickert, Joseph. [A Simple Bayesian Multi-state Survival Model for a Clinical Trial](https://rworks.dev/posts/simple-bayesian-model/) (2025)\n\n* Welton NJ, Sutton AJ, Cooper NJ, Abrams KR, and Ades AE. [Evidence Synthesis for Decision Making in Healthcare](https://onlinelibrary.wiley.com/doi/book/10.1002/9781119942986). Cambridge University Press. (2010)\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}